import { FormEvent, useContext, useRef, useCallback } from "react";
import type { NextPage } from "next";
import Head from "next/head";
import * as Yup from "yup";
import { FormHandles } from "@unform/core";
import { Form } from "@unform/web";

import { AuthContext } from "@/contexts/AuthContext";

import { withSSRGuest } from "@/utils/withSSRGuest";

import { Input } from "@/components/elements/Input";
import getValidationsErrors from "@/utils/getValidationErrors";

import { Container, Content, Banner, ButtonLogin } from "./styles";

interface LoginFormData {
  username: string;
  password: string;
}

const Home: NextPage = () => {
  const formRef = useRef<FormHandles>(null);

  const { signIn } = useContext(AuthContext);

  const handleSubmit = useCallback(
    async (data: LoginFormData) => {
      try {
        formRef.current?.setErrors({});

        const schema = Yup.object().shape({
          username: Yup.string().required("Usuário obrigatório"),
          password: Yup.string().required("Senha obrigatória"),
        });

        await schema.validate(data, {
          abortEarly: false,
        });

        await signIn({
          username: data.username,
          password: data.password,
        });
      } catch (err) {
        if (err instanceof Yup.ValidationError) {
          const errors = getValidationsErrors(err);

          formRef.current?.setErrors(errors);

          return;
        }
      }
    },
    [signIn]
  );

  return (
    <>
      <Head>
        <title>Login Page</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Container>
        <Banner />
        <Content>
          <Form ref={formRef} onSubmit={handleSubmit}>
            <Input name="username" placeholder="Seu usuário" label="Usuário:" />
            <Input
              name="password"
              type="password"
              placeholder="Sua senha"
              label="Senha:"
            />

            <ButtonLogin type="submit">Acessar</ButtonLogin>
          </Form>
        </Content>
      </Container>
    </>
  );
};

export const getServerSideProps = withSSRGuest(async (ctx) => {
  return {
    props: {},
  };
});

export default Home;
